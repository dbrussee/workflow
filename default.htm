<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Workflow Runner</title>
<link rel="stylesheet" type="text/css" href="style/B/Bui.css">
<script src="script/B/B.js"></script>
<link rel="stylesheet" type="text/css" href="style/workflow.css">
<script src='script/workflow.js'></script>
<script src='script/workflowUI.js'></script>
<script src='script/FileSaver.js'></script>
<script src='script/BFile.js'></script>
<link rel="stylesheet" type="text/css" href="style/general.css">
<script>
    // Pre-Release version 0.01 - 9/16/2020 - dbrussee
    var page = {}
    page.wflow = null;
    page.fileReader = null;
    page.getFlow = function() {
        //page.editStep(false);
        var div = document.getElementById("locDebug");
        div.innerHTML = "<button onclick='page.readFlowFromTextFile(\"./flows/initial.flow\");'>New Flow</button> ";
        div.innerHTML += "<button onclick='page.readFlowFromTextFile(\"./flows/sample.flow\");'>Sample</button> ";
        page.fileReader = new B.File(div, function() {
            page.fileReader.getText(function(txt) {
                page.replaceFlow(txt);
            });
        });
        var btn = document.createElement("button");
        btn.innerHTML = "Cancel";
        btn.onclick = function() {page.clear();}
        div.appendChild(btn);
    }
    page.clear = function() {
        if (WorkflowUI.pickedSpot != null) {
            WorkflowUI.clearPickedSpot();
            WorkflowUI.pickedSpot = null;
        }
        document.getElementById("locCreateButton").style.display = "none";
        WorkflowUI.dragstart = null; // Stop dragging
        WorkflowUI.pickAction = null;
        debug();
        if (WorkflowUI.pickedStep == null) {
            page.editStep(false);
        } else {
            page.editStep(true);
        }
    }
    page.saveFlow = function() {
        var msg = "Save this flow as <input id='txtSaveFileName' value=\"" + page.wflow.flow.name + "\" style='color:blue;text-align:right'>.flow? ";
        debug(msg);
        var div = document.getElementById("locDebug");
        var btn = document.createElement("button");
        btn.innerHTML = "Save";
        btn.onclick = function() {
            var filename = document.getElementById("txtSaveFileName").value;
            if (filename == "") filename = page.wflow.flow.name;
            page.wflow.flow.name = filename;
            var blob = new Blob([JSON.stringify(page.wflow.flow)], {type: "text/plain;charset=utf-8"});
            saveAs(blob, filename + ".flow");
            page.clear();
        }
        div.appendChild(btn);
        btn = document.createElement("button");
        btn.innerHTML = "Cancel";
        btn.onclick = page.clear;
        div.appendChild(btn);
    }
    page.loadFlow = function(flow, justload) {
        if (justload == undefined) justload = false;
        if (flow == undefined) flow = JSON.stringify(page.wflow.flow);
        if (justload) {
            page.replaceFlow(flow);
        } else {
            if (typeof flow == "object") flow = JSON.stringify(flow);
            page.pendingFlow = flow;
            var json = JSON.parse(flow);
            var count = 0;
            for (var key in json.steps) count++;
            var msg = "Replace the current flow with a new one with " + count + " " + (count == 1 ? "step":"steps") + "?";
            ask(msg, "JSON", function(rslt) {
                if (rslt == "YES") page.replaceFlow(page.pendingFlow);
            }, true);
        }
    }
    page.replaceFlow = function(json) {
        debug();
        WorkflowUI.pickedStep = null;
        WorkflowUI.pickedSpot = null;
        document.getElementById("locCreateButton").style.display = "none";
        page.editStep(false);
        if (typeof json == "string") {
            try {
                json = JSON.parse(json);
            } catch(e) {
                say("Error Message: " + e, "Error");
                return;
            }
        }
        page.wflow.flow = json;
        page.wflow.drawCanvas();
    }
    page.saveStepInfo = function() {
        var frm = B.getForm("frmStep");
        var step = WorkflowUI.pickedStep;
        var data = frm.get();
        step.comment = data.step_comment;
        if (step.resolve_list.length == 0) {
            step.completed = data.step_completed;
        } else {
            if (data.step_resolution == "") {
                step.completed = false;
                step.result = null;
            } else {
                step.completed = true;
                step.result = data.step_resolution;
            }
        }
        page.wflow.drawCanvas(page.wflow);
        page.wflow.highlightStep(step, true);
    }
    page.askToDeleteStep = function() {
        WorkflowUI.dragstart = null; // Stop dragging
        WorkflowUI.pickAction = "addBlock";
        var msg = "Confirm delete of step "  + WorkflowUI.pickedStep.title + ": ";
        msg += "<button onclick='page.wflow.deleteStep()'>Delete Now</button> or "
        msg += "<button onclick='page.editStep(true)'>Cancel</button>"
        debug(msg);
        //debug();
        //var msg = "Are you sure you want to delete this step? You cannot undo this action.";
        //ask(msg, "Delete Step", function(rslt) {
        //    if (rslt == "YES") page.wflow.deleteStep();
        //}).warning();
    }
    page.addBlockStep = function(spn, bstep) {
        if (spn != null) {
            WorkflowUI.dragstart = null; // Stop dragging
            WorkflowUI.pickAction = "addBlock";
            debug("Click a step to add as a blocking step for this step <button onclick='page.editStep(true)'>cancel</button>...");
        } else {
            debug("");
            WorkflowUI.pickAction = null;
            var rslt =  page.wflow.setBlock(WorkflowUI.pickedStep, bstep);
            if (rslt.error != "") {
                debug(rslt.error, "red");
            } else {
                page.editStep(rslt.blockedStep);
            }

        }
    }
    page.addBlockedByStep = function(spn, bstep) {
        if (spn != null) {
            WorkflowUI.dragstart = null; // Stop dragging
            WorkflowUI.pickAction = "addBlockedBy";
            debug("Click a step to add as a blocking step for this step <button onclick='page.editStep(true)'>cancel</button>...");
        } else {
            debug("");
            var rslt = page.wflow.setBlockedBy(WorkflowUI.pickedStep, bstep);
            if (rslt.error != "") {
                debug(rslt.error, "red");
            } else {
                page.editStep(rslt.blockedByStep);
            }
        }
    }
    page.removeBlockedBy = function(spn, blockid) {
        var step = page.wflow.getStep(blockid);
        var msg = "Confirm removal of link to " + step.title + ": ";
        msg += " <button onclick='page.wflow.removeLink(\"" + blockid + "\")'>Remove</button> or ";
        msg += " <button onclick='page.editStep(true)'>Cancel</button>";
        debug(msg);
    }
    page.removeBlock = function(spn, blockid) {
        var step = page.wflow.getStep(blockid);
        var msg = "Confirm removal of link to " + step.title + ": ";
        msg += " <button onclick='page.wflow.removeLink(\"" + blockid + "\")'>Remove</button> or ";
        msg += " <button onclick='page.editStep(true)'>Cancel</button>";
        debug(msg);
    }
    page.toggleStep = function() {
        if (WorkflowUI.pickedStep == null) return;
        var step = WorkflowUI.pickedStep;
        if (step.completed) {
            page.incompleteStep();
        } else {
            if (step.resolve_list.length == 0) {
                page.completeStep();
            }
        }
    }
    page.incompleteStep = function() {
        if (WorkflowUI.pickedStep == null) return;
        var step = WorkflowUI.pickedStep;
        if (page.wflow.canComplete(step, false) != "") return;
        var frm = B.getForm("frmStep");
        frm.set("step_completed", false);
        frm.set("step_resolution", "");
        page.saveStepInfo();
    }
    page.completeStep = function(val) {
        if (WorkflowUI.pickedStep == null) return;
        var step = WorkflowUI.pickedStep;
        if (page.wflow.canComplete(step, true) != "") return;
        var frm = B.getForm("frmStep");
        if (val == undefined) {
            if (step.resolve_list.length == 0) {
                frm.set("step_completed", true);
                frm.set("step_resolution", "");
                page.saveStepInfo();
            }
        } else {
            if (step.resolve_list.length == 0) {
                //frm.set("step_completed", true);
                //frm.set("step_resolution", "");
                //page.saveStepInfo();
            } else {
                var rslt = step.resolve_list[val];
                if (rslt != null) {
                    frm.set("step_completed", true);
                    frm.set("step_resolution", rslt.code);
                    page.saveStepInfo();
                }
            }
        }
    }
    page.pickStepId = function(id) {
        if (WorkflowUI.pickedStep != null) {
            page.wflow.highlightStep(WorkflowUI.pickedStep, false);
        }
        var step = page.wflow.getStep(id);
        WorkflowUI.pickedStep = step;
        page.editStep(step);
    }
    page.pickStep = function(x, y) {
        if (WorkflowUI.pickedStep == null) return;
        var step = WorkflowUI.pickedStep;
        var newstep = null;
        for (var id in page.wflow.flow.steps) {
            var test = page.wflow.flow.steps[id];
            if (test.id == step.id) continue;
            if (x == 0) {
                var diff = test.location.col - step.location.col;
                if (diff != 0) continue;
                diff = test.location.row - step.location.row;
                if (y < 0 && diff <= 0) {
                    if (newstep != null) {
                        var curdiff = newstep.location.row - step.location.row;
                        if (curdiff <= 0 && diff > curdiff) {
                            newstep = test;
                        }
                    } else {
                        newstep = test;
                    }
                } else if (y > 0 && diff >= 0) {
                    if (newstep != null) {
                        var curdiff = newstep.location.row - step.location.row;
                        if (curdiff >= 0 && diff < curdiff) {
                            newstep = test;
                        }
                    } else {
                        newstep = test;
                    }
                }
            } else {
                var diff = test.location.row - step.location.row;
                if (diff != 0) continue;
                diff = test.location.col - step.location.col;
                if (x > 0 && diff >= 0) {
                    if (newstep != null) {
                        var curdiff = newstep.location.col - step.location.col;
                        if (curdiff >= 0 && diff < curdiff) {
                            newstep = test;
                        }
                    } else {
                        newstep = test;
                    }
                } else if (x < 0 && diff <= 0) {
                    if (newstep != null) {
                        var curdiff = newstep.location.col - step.location.col;
                        if (curdiff <= 0 && diff > curdiff) {
                            newstep = test;
                        }
                    } else {
                        newstep = test;
                    }
                }
            }
        }
        if (newstep != null) {
            page.wflow.highlightStep(step, false);
            WorkflowUI.pickedStep = newstep;
            page.editStep(newstep);
        }
    }
    page.init = function() {
        window.onkeydown = function(event) {
            //console.log(event.keyCode);
            var block = true;
            if (event.keyCode == 38) page.pickStep(0, -1); // Up
            else if (event.keyCode == 40) page.pickStep(0, 1); // Down
            else if (event.keyCode == 37) page.pickStep(-1, 0); // Left
            else if (event.keyCode == 39) page.pickStep(1, 0); // Right
            else block = false;
            if (block) event.preventDefault();
        }
        page.wflow = new Workflow("Test");
/*        page.wflow.flow = {
            "name":"Test",
            "steps":{
                "S0":{id:0,title:"Zero",desc:"My first step",location:{col:0,row:0},result:null,completed:false,dependsOn:[],dependedOnBy:[1,2],comment:"Sample comment",resolve_list:[]},
                "S4":{id:4,title:"Four",desc:"First PLUS",location:{col:0,row:1},result:null,completed:false,dependsOn:[],dependedOnBy:[1],comment:"", resolve_list:[]},
                "S1":{id:1,title:"One",desc:"Second step",location:{col:1,row:0},result:null,completed:false,dependsOn:[0,4],dependedOnBy:[],comment:"", resolve_list:[]},
                "S2":{id:2,title:"Two",desc:"Third step",location:{col:1,row:1},result:null,completed:false,dependsOn:[0,3],dependedOnBy:[5],comment:"", resolve_list:[]},
                "S3":{id:3,title:"Three",desc:"Fourth step. This one was added manually",location:{col:0,row:2},result:null,completed:false,dependsOn:[],dependedOnBy:[2],comment:"", resolve_list:[{code:"A",desc:"Option A"},{code:"B",desc:"Option B which has been made artifically quite long so it will make the dropdown list need to be shortened a bit"}]},
                "S5":{id:5,title:"Five",desc:"Fifth and Final",location:{col:2,row:1},result:null,completed:false,dependsOn:[2],dependedOnBy:[],comment:"", resolve_list:[{code:"A",desc:"First Choice"},{code:"B",desc:"Second Option"}]}
            }
        } */

        WorkflowUI.defineCanvas(page.wflow, document.getElementById("locFlowDiagramCanvas"));
        page.wflow.addEventListener("steppicked", function(e) {
            document.getElementById("locCreateButton").style.display = "none";
            page.editStep(e.detail.step);
        });
        page.wflow.addEventListener("actioncompleted", function(e) {
            if (e.detail.action == "addBlock") {
                page.addBlockStep(null, e.detail.step);
            } else if (e.detail.action == "addBlockedBy") {
                page.addBlockedByStep(null, e.detail.step);
            }
            page.wflow.highlightStep(e.detail.source, true);
        });
        page.wflow.addEventListener("actionaborted", function(e) {
            document.getElementById("locCreateButton").style.display = "none";
            page.editStep(true);
        });
        page.wflow.addEventListener("emptyspotpicked", function(e) {
            document.getElementById("frmStep").style.display = "none";
            document.getElementById("locCreateButton").style.display = "block";
            debug();
        });
        page.wflow.addEventListener("stepdeleted", function(e) {
            page.editStep(false);
            debug();
        });
        page.wflow.addEventListener("linkremoved", function(e) {
            page.editStep(true);
            debug();
        });

        //page.wflow.readFlowFromTextFile("./flows/simple.flow");
        page.readFlowFromTextFile("./flows/initial.flow", true);
    }
    page.editComment = function() {
        var step = WorkflowUI.pickedStep;
        sayGet("Edit comment for this step below", "Comment", step.comment, "Edit Comment", function(rslt) {
            var step = WorkflowUI.pickedStep;
            step.comment = rslt;
            document.getElementById("step_comment").innerHTML = step.comment;
        }, true);
    }
    page.editStep = function(step) {
        WorkflowUI.pickAction = null;
        if (step == undefined) step = false; // Turn it off
        if (typeof step == "boolean") {
            if (step) { // passed "true"... Reload currently picked step
                step = WorkflowUI.pickedStep;
            } else {
                document.getElementById("frmStep").style.display = "none";
                return;
            }
        }
        document.getElementById("locCreateButton").style.display = "none";
        debug("");
        document.getElementById("frmStep").style.display = "block";
        var frm = B.getForm("frmStep");
        frm.set("step_title", step.title, 
            "step_completed", step.completed);
        document.getElementById("step_desc").innerHTML = step.desc;
        document.getElementById("step_comment").innerHTML = step.comment;
        var loc = document.getElementById("step_dependson");
        loc.innerHTML = "";
        if (step.dependsOn.length == 0) {
            loc.innerHTML = "&lt;None&gt;";
        } else {
            var ul = document.createElement("ul");
            ul.style.listStyleType="none";
            for (var i = 0; i < step.dependsOn.length; i++) {
                var depid = step.dependsOn[i];
                var depStep = page.wflow.getStep(depid);
                var li = document.createElement("li");
                li.innerHTML = "";
                var txt = depStep.completed ? "&#x2713; " : "&nbsp;&nbsp; ";
                txt += "<span class='anchor' onclick='page.pickStepId(" + depStep.id + ")'>" + depStep.title + "</span>";
                txt += "&nbsp;&nbsp;";
                txt += "<span class='anchor' style='color:red' onclick='page.removeBlockedBy(this, " + depStep.id + ")'>[&#xD7;]</span>";
                li.innerHTML = txt;
                li.style.color = depStep.completed ? "green" : "red";
                ul.appendChild(li);
            }
            loc.appendChild(ul);
        }
        var loc = document.getElementById("step_dependedonby");
        loc.innerHTML = "";
        if (step.dependedOnBy.length == 0) {
            loc.innerHTML = "&lt;None&gt;";
        } else {
            var ul = document.createElement("ul");
            ul.style.listStyleType="none";
            for (var i = 0; i < step.dependedOnBy.length; i++) {
                var depid = step.dependedOnBy[i];
                var depStep = page.wflow.getStep(depid);
                var li = document.createElement("li");
                li.innerHTML = "";
                var txt = depStep.completed ? "&#x2713; " : "&nbsp;&nbsp; ";
                txt += "<span class='anchor' onclick='page.pickStepId(" + depStep.id + ")'>" + depStep.title + "</span>";
                txt += "&nbsp;&nbsp;";
                txt += "<span class='anchor' style='color:red' onclick='page.removeBlock(this, " + depStep.id + ")'>[&#xD7;]</span>";
                li.innerHTML = txt;
                ul.appendChild(li);
            }
            loc.appendChild(ul);
        }
        document.getElementById("locResolveCheckbox").style.display = "none";
        document.getElementById("locResolveList").style.display = "none";
        var chksel = null;
        if (step.resolve_list.length == 0) { // Simple Yes/No resolution
            document.getElementById("locResolveCheckbox").style.display = "table-row";
            chksel = frm.getElement("step_completed").domElements;
        } else { // List of possible resolution values
            document.getElementById("locResolveList").style.display = "table-row";
            chksel = frm.getElement("step_resolution").domElements;
            chksel.options.length = 1; // Leave the first "select one when completed" item
            for (var i = 0; i < step.resolve_list.length; i++) {
                var itm = step.resolve_list[i];
                var opt = document.createElement("option");
                opt.value = itm.code;
                opt.innerHTML = itm.desc;
                if (itm.code == step.result) opt.selected = true;
                chksel.appendChild(opt);
            }

        }
        chksel.removeAttribute("disabled");
        if (step.completed) {
            var msg = page.wflow.canComplete(step, false);
            if (msg != "") {
                //document.getElementById("locCannotComplete").innerHTML = msg;
                chksel.setAttribute("disabled", "disabled");
            }
        } else {
            var msg = page.wflow.canComplete(step, true);
            if (msg != "") {
                //document.getElementById("locCannotComplete").innerHTML = msg;
                chksel.setAttribute("disabled", "disabled");
            }
        }
        page.wflow.highlightStep(step, true);
    }
function debug(txt, clr) {
    if (txt == undefined || txt == null) txt = "";
    var div = document.getElementById("locDebug");
    if (div != undefined) {
        div.innerHTML = "";
        if (clr == undefined) clr = "black";
        div.innerHTML = txt;
        div.style.color = clr;
    }
}
page.readFlowFromTextFile = function (file, justload) {
    var rawFile = new XMLHttpRequest();
    page.justload = justload;
    //rawFile.overrideMimeType("application/json");
    rawFile.overrideMimeType("text/plain");
    rawFile.open("GET", file, true);
    rawFile.onreadystatechange = function() {
        if (rawFile.readyState === 4 && rawFile.status == "200") {
            page.loadFlow(JSON.parse(rawFile.responseText), page.justload);
        }
    }
    rawFile.send(null);
}
page.copyToClipboard = function(txt) {
    if (txt == undefined) txt = JSON.stringify(page.wflow.flow);
    var tbox = document.createElement("input");
    //tbox.style.display = "none";
    document.body.appendChild(tbox);
    tbox.value = txt;
    tbox.focus();
    tbox.select();
    tbox.setSelectionRange(0,999999); // mobile needs this
    document.execCommand("copy");
    document.body.removeChild(tbox);
}
</script>
</head>
<body onload='page.init()'>
    <table style='width:100%'>
        <tr>
            <td style='vertical-align: top; width:650px;'>
                <div style='position:relative; width:610px; height: 400px; overflow:scroll;'>
                    <div id='locFlowDiagramCanvas'></div>
                </div>
                <button onclick='page.getFlow()'>Load Flow</button>
                <button onclick='page.saveFlow()'>Save Flow</button>
                <div style='padding-top: .5em;margin-top:.5em; border-top: 1px solid navy;' id='locDebug' style='color:brown'></div>
            
            </td>
            <td id='locForm' style='vertical-align: top; text-align: left; width:calc(100vw - 650px)'>
                <span style='display:none' id='locCreateButton'><button onclick='page.wflow.createStep()'>Create Step Here</button></span>
                <form id='frmStep' style='display:none'>
                    <button onclick='page.askToDeleteStep()'>Delete This Step</button>
                    <table class='form'>
                        <tr><th>Title:</th><td><input readonly name='step_title' size='30'></td></tr>
                        <tr><th>Description:</th><td id='step_desc'></textarea></td></tr>
                        <tr><th><span class='anchor' onclick='page.editComment();'>Comment</span>:</th><td id='step_comment'></td></tr>
                        <tr><td colspan='2'>
                            <table style='width:100%'>
                                <tr>
                                    <td style='width:50%'>
                                        Blocked by [<span class='anchor' onclick='page.addBlockStep(this)'>add</span>]<br>
                                        <span id='step_dependson'></span>
                                    </td>
                                    <td style='width:50%'>
                                        Blocks [<span class='anchor' onclick='page.addBlockedByStep(this)'>add</span>]<br>
                                        <span id='step_dependedonby'></span>
                                    </td>
                                </tr></table>
                            </td>
                        </tr>
            
                        <tr style='display:none' id='locResolveCheckbox'><th>Completed:</th><td><label><input type='checkbox' onchange='page.saveStepInfo()' name='step_completed'> <i style='color:coral;'>Check when completed</i></label></td></tr>
                        <tr style='display:none' id='locResolveList'><th>Resolution:</th><td><select style='width:15em' onchange='page.saveStepInfo()' name='step_resolution'><option value=''>Not completed</option></select></td></tr>
                        <tr><td>&nbsp;</td><td id='locCannotComplete' style='font-size:.9em; color:red;'></td></tr>
                    </table>
                    </div>
                </form>
            
            </td>
        </tr>
    </table>
</body>
</html>

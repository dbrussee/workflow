<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Workflow Runner</title>
<link rel="stylesheet" type="text/css" href="style/B/Bui.css">
<script src="script/B/B.js"></script>
<link rel="stylesheet" type="text/css" href="style/workflow.css">
<script src='script/workflow.js'></script>
<script src='script/workflowUI.js'></script>
<script src='script/FileSaver.js'></script>
<script src='script/BFile.js'></script>
<link rel="stylesheet" type="text/css" href="style/general.css">
<script>
    // Pre-Release version 0.01 - 9/16/2020 - dbrussee
    var page = {}
    page.wflow = null;
    page.fileReader = null;
    page.toastTimer = null;
    page.toast = function(msg) {
        if (msg == undefined) msg = "";
        var loc = document.getElementById("locToastMessage");
        loc.innerHTML = msg;
        if (page.toastTimer != null) window.clearTimeout(page.toastTimer);
        if (msg == "") {
            page.toastTimer = null;
        } else {
            page.toastTimer = window.setTimeout(function() {
                page.toast();
            }, 4000);
        }
    }
    page.changeShape = function() {
        var chk = B.getForm("frmStep").get();
        page.wflow.flow.pickedStep.shape = chk.step_shape;
        page.wflow.drawCanvas();
        page.wflow.highlightStep(page.wflow.flow.pickedStep, true);
    }
    page.getFlow = function() {
        //page.editStep(false);
        var div = document.getElementById("locDebug");
        div.innerHTML = "<button onclick='page.readFlowFromTextFile(\"./flows/initial.flow\");'>New Flow</button> ";
        div.innerHTML += "<button onclick='page.readFlowFromTextFile(\"./flows/sample.flow\");'>Sample</button> ";
        page.fileReader = new B.File(div, function() {
            page.fileReader.getText(function(txt) {
                page.replaceFlow(txt);
            });
        });
        var btn = document.createElement("button");
        btn.innerHTML = "Cancel";
        btn.onclick = function() {page.clear();}
        btn.style.marginLeft = ".4em";
        div.appendChild(btn);
    }
    page.clear = function() {
        if (WorkflowUI.pickedSpot != null) {
            WorkflowUI.clearPickedSpot();
            WorkflowUI.pickedSpot = null;
        }
        WorkflowUI.dragstart = null; // Stop dragging
        WorkflowUI.pickAction = null;
        debug();
        if (page.wflow.flow.pickedStep == null) {
            page.editStep(false);
        } else {
            page.editStep(true);
        }
    }
    page.saveLocal = function() {
        localStorage.setItem("workflow", JSON.stringify(page.wflow.flow));
        page.toast("Local copy saved");
    }
    page.saveFlow = function() {
        var msg = "Save this flow as <input id='txtSaveFileName' value=\"" + page.wflow.flow.name + "\" style='color:blue;text-align:right'>.flow? ";
        debug(msg);
        var div = document.getElementById("locDebug");
        var btn = document.createElement("button");
        btn.innerHTML = "Save";
        btn.onclick = function() {
            var filename = document.getElementById("txtSaveFileName").value;
            if (filename == "") filename = page.wflow.flow.name;
            page.wflow.flow.name = filename;
            var blob = new Blob([JSON.stringify(page.wflow.flow)], {type: "text/plain;charset=utf-8"});
            saveAs(blob, filename + ".flow");
            page.clear();
            page.saveLocal();
        }
        div.appendChild(btn);
        btn = document.createElement("button");
        btn.innerHTML = "Cancel";
        btn.onclick = page.clear;
        div.appendChild(btn);
    }
    page.loadFlow = function(flow, justload) {
        if (justload == undefined) justload = false;
        if (flow == undefined) flow = JSON.stringify(page.wflow.flow);
        if (justload) {
            page.replaceFlow(flow);
        } else {
            if (typeof flow == "object") flow = JSON.stringify(flow);
            page.pendingFlow = flow;
            var json = JSON.parse(flow);
            var count = 0;
            for (var key in json.steps) count++;
            var msg = "Replace the current flow with a new one with " + count + " " + (count == 1 ? "step":"steps") + "?";
            ask(msg, "JSON", function(rslt) {
                if (rslt == "YES") page.replaceFlow(page.pendingFlow);
            }, true);
        }
    }
    page.replaceFlow = function(json) {
        debug();
        page.wflow.flow.pickedStep = null;
        WorkflowUI.pickedSpot = null;
        page.editStep(false);
        if (typeof json == "string") {
            try {
                json = JSON.parse(json);
            } catch(e) {
                say("Error Message: " + e, "Error");
                return;
            }
        }
        page.wflow.flow = json;
        page.wflow.drawCanvas();
        if (page.wflow.flow.pickedStep != null) {
            page.pickStepId(page.wflow.flow.pickedStep.id);
        }
        page.saveLocal();
    }
    page.saveStepInfo = function() {
        var frm = B.getForm("frmStep");
        var step = page.wflow.flow.pickedStep;
        var data = frm.get();
        step.comment = data.step_comment;
        if (step.resolve_list.length == 0) {
            step.completed = data.step_completed;
        } else {
            if (data.step_resolution == "") {
                step.completed = false;
                step.result = null;
            } else {
                step.completed = true;
                step.result = data.step_resolution;
            }
        }
        page.wflow.drawCanvas(page.wflow);
        page.wflow.highlightStep(step, true);
    }
    page.askToDeleteStep = function() {
        WorkflowUI.dragstart = null; // Stop dragging
        WorkflowUI.pickAction = "addBlock";
        var msg = "Confirm delete of step "  + page.wflow.flow.pickedStep.title + ": ";
        msg += "<button onclick='page.wflow.deleteStep()'>Delete Now</button> or "
        msg += "<button onclick='page.editStep(true)'>Cancel</button>"
        debug(msg);
        //debug();
        //var msg = "Are you sure you want to delete this step? You cannot undo this action.";
        //ask(msg, "Delete Step", function(rslt) {
        //    if (rslt == "YES") page.wflow.deleteStep();
        //}).warning();
    }
    page.addBlockStep = function(bstep) {
        if (bstep == undefined) {
            WorkflowUI.dragstart = null; // Stop dragging
            WorkflowUI.pickAction = "addBlock";
            debug("Click a step to add as a blocking step for this step <button onclick='page.editStep(true)'>Cancel</button>...");
        } else {
            debug("");
            WorkflowUI.pickAction = null;
            var rslt =  page.wflow.setBlock(page.wflow.flow.pickedStep, bstep);
            if (rslt.error != "") {
                debug(rslt.error, "red");
            } else {
                page.editStep(page.wflow.flow.pickedStep);
            }

        }
    }
    page.addBlockedByStep = function(bstep) {
        if (bstep == undefined) {
            WorkflowUI.dragstart = null; // Stop dragging
            WorkflowUI.pickAction = "addBlockedBy";
            debug("Click a step to add as a blocking step for this step <button onclick='page.editStep(true)'>Cancel</button>...");
        } else {
            debug("");
            var rslt = page.wflow.setBlockedBy(page.wflow.flow.pickedStep, bstep);
            if (rslt.error != "") {
                debug(rslt.error, "red");
            } else {
                page.editStep(page.wflow.flow.pickedStep);
            }
        }
    }
    page.removeBlockedBy = function(spn, blockid) {
        var step = page.wflow.getStep(blockid);
        var msg = "Confirm removal of link to " + step.title + ": ";
        msg += " <button onclick='page.wflow.removeLink(\"" + blockid + "\")'>Remove</button> or ";
        msg += " <button onclick='page.editStep(true)'>Cancel</button>";
        debug(msg);
    }
    page.removeBlock = function(spn, blockid) {
        var step = page.wflow.getStep(blockid);
        var msg = "Confirm removal of link to " + step.title + ": ";
        msg += " <button onclick='page.wflow.removeLink(\"" + blockid + "\")'>Remove</button> or ";
        msg += " <button onclick='page.editStep(true)'>Cancel</button>";
        debug(msg);
    }
    page.setResolution = function() {
        if (page.wflow.flow.pickedStep == null) return;
        var step = page.wflow.flow.pickedStep;
        var frm = document.forms['frmStep'];
        var rdo = frm.elements['step_resolution'];
        var val = rdo.value;
        if (val == "") {
            if (page.wflow.canComplete(step, false) != "") return;
            step.result = null;
            step.completed = false;
        } else {
            if (page.wflow.canComplete(step, true) != "") return;
            step.result = val;
            step.completed = true;
        }
        page.wflow.drawCanvas();
        page.wflow.highlightStep(step, true);
    }
    page.incompleteStep = function() {
        if (page.wflow.flow.pickedStep == null) return;
        var step = page.wflow.flow.pickedStep;
        if (page.wflow.canComplete(step, false) != "") return;
        var frm = B.getForm("frmStep");
        frm.set("step_completed", false);
        frm.set("step_resolution", "");
        page.saveStepInfo();
    }
    page.completeStep = function(val) {
        if (page.wflow.flow.pickedStep == null) return;
        var step = page.wflow.flow.pickedStep;
        if (page.wflow.canComplete(step, true) != "") return;
        var frm = B.getForm("frmStep");
        if (val == undefined) {
            if (step.resolve_list.length == 0) {
                frm.set("step_completed", true);
                frm.set("step_resolution", "");
                page.saveStepInfo();
            }
        } else {
            if (step.resolve_list.length == 0) {
                //frm.set("step_completed", true);
                //frm.set("step_resolution", "");
                //page.saveStepInfo();
            } else {
                var rslt = step.resolve_list[val];
                if (rslt != null) {
                    frm.set("step_completed", true);
                    frm.set("step_resolution", rslt.code);
                    page.saveStepInfo();
                }
            }
        }
    }
    page.pickStepId = function(id) {
        if (page.wflow.flow.pickedStep != null) {
            page.wflow.highlightStep(page.wflow.flow.pickedStep, false);
        }
        var step = page.wflow.getStep(id);
        page.wflow.flow.pickedStep = step;
        page.editStep(step);
    }
    page.pickStep = function(x, y) {
        if (page.wflow.flow.pickedStep == null) return;
        var step = page.wflow.flow.pickedStep;
        var newstep = null;
        for (var id in page.wflow.flow.steps) {
            var test = page.wflow.flow.steps[id];
            if (test.id == step.id) continue;
            if (x == 0) {
                var diff = test.location.col - step.location.col;
                if (diff != 0) continue;
                diff = test.location.row - step.location.row;
                if (y < 0 && diff <= 0) {
                    if (newstep != null) {
                        var curdiff = newstep.location.row - step.location.row;
                        if (curdiff <= 0 && diff > curdiff) {
                            newstep = test;
                        }
                    } else {
                        newstep = test;
                    }
                } else if (y > 0 && diff >= 0) {
                    if (newstep != null) {
                        var curdiff = newstep.location.row - step.location.row;
                        if (curdiff >= 0 && diff < curdiff) {
                            newstep = test;
                        }
                    } else {
                        newstep = test;
                    }
                }
            } else {
                var diff = test.location.row - step.location.row;
                if (diff != 0) continue;
                diff = test.location.col - step.location.col;
                if (x > 0 && diff >= 0) {
                    if (newstep != null) {
                        var curdiff = newstep.location.col - step.location.col;
                        if (curdiff >= 0 && diff < curdiff) {
                            newstep = test;
                        }
                    } else {
                        newstep = test;
                    }
                } else if (x < 0 && diff <= 0) {
                    if (newstep != null) {
                        var curdiff = newstep.location.col - step.location.col;
                        if (curdiff <= 0 && diff > curdiff) {
                            newstep = test;
                        }
                    } else {
                        newstep = test;
                    }
                }
            }
        }
        if (newstep != null) {
            page.wflow.highlightStep(step, false);
            page.wflow.flow.pickedStep = newstep;
            page.editStep(newstep);
        }
    }
    page.init = function() {
        page.wflow = new Workflow("Test", document.getElementById("locFlowDiagramCanvas"));
/*        page.wflow.flow = {
            "name":"Test",
            "steps":{
                "S0":{id:0,title:"Zero",desc:"My first step",location:{col:0,row:0},result:null,completed:false,dependsOn:[],dependedOnBy:[1,2],comment:"Sample comment",resolve_list:[]},
                "S4":{id:4,title:"Four",desc:"First PLUS",location:{col:0,row:1},result:null,completed:false,dependsOn:[],dependedOnBy:[1],comment:"", resolve_list:[]},
                "S1":{id:1,title:"One",desc:"Second step",location:{col:1,row:0},result:null,completed:false,dependsOn:[0,4],dependedOnBy:[],comment:"", resolve_list:[]},
                "S2":{id:2,title:"Two",desc:"Third step",location:{col:1,row:1},result:null,completed:false,dependsOn:[0,3],dependedOnBy:[5],comment:"", resolve_list:[]},
                "S3":{id:3,title:"Three",desc:"Fourth step. This one was added manually",location:{col:0,row:2},result:null,completed:false,dependsOn:[],dependedOnBy:[2],comment:"", resolve_list:[{code:"A",desc:"Option A"},{code:"B",desc:"Option B which has been made artifically quite long so it will make the dropdown list need to be shortened a bit"}]},
                "S5":{id:5,title:"Five",desc:"Fifth and Final",location:{col:2,row:1},result:null,completed:false,dependsOn:[2],dependedOnBy:[],comment:"", resolve_list:[{code:"A",desc:"First Choice"},{code:"B",desc:"Second Option"}]}
            }
        } */

        window.addEventListener("keydown", function(event) {
            //console.log(event.keyCode);
            var block = false;
            if (event.ctrlKey) {
                block = true;
                if (event.keyCode == 38) page.pickStep(0, -1); // Up
                else if (event.keyCode == 40) page.pickStep(0, 1); // Down
                else if (event.keyCode == 37) page.pickStep(-1, 0); // Left
                else if (event.keyCode == 39) page.pickStep(1, 0); // Right
                else block = false;
            }
            if (block) event.preventDefault();
        });
        page.wflow.addEventListener("properties", function(e) {
            var props = e.detail.properties;
            var loc = document.getElementById("locProperties");
            if (props.length == 0) {
                loc.innerHTML = "No flow properties defined";
            } else {
                var h = "<table class='form'>";
                h += "<tr><th style='text-align:left'>Step </th>";
                h += "<th style='text-align:left'>Key </th>";
                h += "<th style='text-align:left'>Value </th></tr>";
                for (var i = 0; i < props.length; i++) {
                    var stepProps = props[i];
                    var step = page.wflow.flow.steps["S" + stepProps.stepid];
                    for (var j = 0; j < stepProps.props.length; j++) {
                        var stepProp = stepProps.props[j];
                        if (j == 0) {
                            h += "<tr><td><span class='anchor' onclick='page.pickStepId(" + step.id + "); page.editProperties()'>" + step.title + "</span></td>";
                        } else {
                            h += "<tr><td>&nbsp;</td>";
                        }
                        h += "<td>" + stepProp.key + "</td>";
                        h += "<td>" + stepProp.value + "</td></tr>";
                    }
                }
                h += "</table>";
                loc.innerHTML = h;
            }
        });
        page.wflow.addEventListener("steppicked", function(e) {
            page.editStep(e.detail.step);
        });
        page.wflow.addEventListener("actioncompleted", function(e) {
            if (e.detail.action == "addBlock") {
                page.addBlockStep(e.detail.step);
            } else if (e.detail.action == "addBlockedBy") {
                page.addBlockedByStep(e.detail.step);
            }
            page.wflow.highlightStep(e.detail.source, true);
        });
        page.wflow.addEventListener("actionaborted", function(e) {
            page.editStep(true);
        });
        page.wflow.addEventListener("emptyspotpicked", function(e) {
            page.editStep(false);
            var msg = "<button onclick='page.wflow.createStep()'>Create step here...</button> ";
            msg += "<button onclick='page.clear()'>Cancel</button>"
            debug(msg);
        });
        page.wflow.addEventListener("stepdeleted", function(e) {
            page.wflow.collectProperties();
            page.editStep(false);
            debug();
        });
        page.wflow.addEventListener("linkremoved", function(e) {
            page.editStep(true);
            debug();
        });
        page.wflow.addEventListener("clear", function(e) {
            page.clear();
        });

        if (localStorage.getItem("workflow") == null) {
            page.readFlowFromTextFile("./flows/initial.flow", true);
        } else {
            page.replaceFlow(localStorage.getItem("workflow"));
        }
    }
    page.editName = function() {
        var step = page.wflow.flow.pickedStep;
        sayGet("Edit the name for this step below", "Name", step.title, "Step Name", function(rslt) {
            var step = page.wflow.flow.pickedStep;
            step.title = rslt;
            document.getElementById("step_title").innerHTML = step.title;
            page.wflow.drawCanvas();
            page.wflow.highlightStep(step, true);
        });
    }
    page.editResolutions = function() {
        openDialog("frmResolutions");
        var frm = B.getForm("frmResolutions");
        frm.reset();
        var step = page.wflow.flow.pickedStep;
        for (var i = 0; i < step.resolve_list.length; i++) {
            frm.set("CODE_" + i, step.resolve_list[i].code);
            frm.set("DESC_" + i, step.resolve_list[i].desc);
        }
    }
    page.editProperties = function() {
        openDialog("frmProperties");
        var frm = B.getForm("frmProperties");
        frm.reset();
        var step = page.wflow.flow.pickedStep;
        for (var i = 0; i < step.properties.length; i++) {
            frm.set("KEY_" + i, step.properties[i].key);
            frm.set("VAL_" + i, step.properties[i].value);
        }
    }
    page.saveProperties = function() {
        var chk = B.getForm("frmProperties").get();
        var step = page.wflow.flow.pickedStep;
        step.properties = [];
        for (var i = 0; i < 10; i++) {
            var key = chk["KEY_" + i];
            var val = chk["VAL_" + i];
            if (key != "") {
                step.properties.push({"key":key,"value":val});
            }
        }
        page.pickStepId(step.id);
        page.wflow.collectProperties();
    }
    page.editLinks = function() {
        openDialog("frmLinks"); // Data already filled when we started the step edit
    }
    page.saveResolutions = function() {
        var chk = B.getForm("frmResolutions").get();
        var step = page.wflow.flow.pickedStep;
        step.resolve_list = [];
        for (var i = 0; i < 10; i++) {
            var code = chk["CODE_" + i];
            var desc = chk["DESC_" + i];
            if (code != "") {
                step.resolve_list.push({"code":code,"desc":desc});
            }
        }
        page.pickStepId(step.id);
    }
    page.editComment = function() {
        var step = page.wflow.flow.pickedStep;
        sayGet("Edit comment for this step below", "Edit Comment", step.comment, "Comment", function(rslt) {
            var step = page.wflow.flow.pickedStep;
            step.comment = rslt;
            document.getElementById("step_comment").innerHTML = step.comment;
            page.wflow.highlightStep();
        }, true);
    }
    page.editDescription = function() {
        var step = page.wflow.flow.pickedStep;
        sayGet("Edit description for this step below", "EditDescription", step.desc, "Desc", function(rslt) {
            var step = page.wflow.flow.pickedStep;
            step.desc = rslt;
            document.getElementById("step_desc").innerHTML = step.desc;
            page.wflow.highlightStep();
        }, true);
    }
    page.editStep = function(step) {
        WorkflowUI.pickAction = null;
        if (step == undefined) step = false; // Turn it off
        if (typeof step == "boolean") {
            if (step) { // passed "true"... Reload currently picked step
                step = page.wflow.flow.pickedStep;
            } else {
                document.getElementById("frmStep").style.display = "none";
                return;
            }
        }
        debug("");
        document.getElementById("frmStep").style.display = "block";
        var frm = B.getForm("frmStep");
        frm.reset();
        frm.set("step_completed", step.completed);
        document.getElementById("step_title").innerHTML = step.title;
        document.getElementById("step_desc").innerHTML = step.desc;
        document.getElementById("step_comment").innerHTML = step.comment;
        if (step.shape == undefined) step.shape = "step";
        frm.set("step_shape", step.shape);
        var blked = step.dependsOn.length;
        var blkby = step.dependedOnBy.length
        var txt = "Blocking: " + (blkby == 0 ? "None" : blkby);
        txt += ", Blocked By: " + (blked == 0 ? "None" : blked);
        document.getElementById("step_link_summary").innerHTML = txt;

        var loc = document.getElementById("step_properties");
        if (step.properties.length == 0) {
            loc.innerHTML = "&lt;No Properties&gt;";
        } else {
            var tbl = "";
            for (var i = 0; i < step.properties.length; i++) {
                var prop = step.properties[i];
                tbl += "<tr><td style='color:navy'>" + prop.key + "</td>";
                tbl += "<td>" + (prop.value == "" ? "&lt;not entered&gt;" : prop.value) + "</td></tr>";
            }
            loc.innerHTML = "<table>" + tbl + "</table>";
        }


        var loc = document.getElementById("step_dependson");
        loc.innerHTML = "";
        if (step.dependsOn.length == 0) {
            loc.innerHTML = "&lt;None&gt;";
        } else {
            var ul = document.createElement("ul");
            ul.style.listStyleType="none";
            for (var i = 0; i < step.dependsOn.length; i++) {
                var depid = step.dependsOn[i];
                var depStep = page.wflow.getStep(depid);
                var li = document.createElement("li");
                li.innerHTML = "";
                var txt = "<span class='anchor' style='color:red' onclick='page.wflow.removeLink(" + depStep.id + ")'>[&#xD7;]</span>";
                txt += "&nbsp;";
                txt += depStep.completed ? "&#x2713; " : "&nbsp;&nbsp; ";
                txt += "<span class='anchor' onclick='page.pickStepId(" + depStep.id + ")'>" + depStep.title + "</span>";
                li.innerHTML = txt;
                li.style.color = depStep.completed ? "green" : "red";
                ul.appendChild(li);
            }
            loc.appendChild(ul);
        }
        var loc = document.getElementById("step_dependedonby");
        loc.innerHTML = "";
        if (step.dependedOnBy.length == 0) {
            loc.innerHTML = "&lt;None&gt;";
        } else {
            var ul = document.createElement("ul");
            ul.style.listStyleType="none";
            for (var i = 0; i < step.dependedOnBy.length; i++) {
                var depid = step.dependedOnBy[i];
                var depStep = page.wflow.getStep(depid);
                var li = document.createElement("li");
                li.innerHTML = "";
                var txt = "<span class='anchor' style='color:red' onclick='page.wflow.removeLink(" + depStep.id + ")'>[&#xD7;]</span>";
                txt += "&nbsp;";
                txt += depStep.completed ? "&#x2713; " : "&nbsp;&nbsp; ";
                txt += "<span class='anchor' onclick='page.pickStepId(" + depStep.id + ")'>" + depStep.title + "</span>";
                li.innerHTML = txt;
                ul.appendChild(li);
            }
            loc.appendChild(ul);
        }
        var dis = ""; // Not disabled
        if (step.completed) {
            var msg = page.wflow.canComplete(step, false);
            if (msg != "") {
                dis = " disabled";
            }
        } else {
            var msg = page.wflow.canComplete(step, true);
            if (msg != "") {
                dis = " disabled";
            }
        }

        var td = document.getElementById("locResolveList");
        var oc = " onchange='page.setResolution()'";
        var picked = step.completed ? "" : " checked";
        td.innerHTML = "<label><input" + oc + dis + picked + " type='radio' name='step_resolution' value='' selected> Not Completed</label><br>";
        if (step.resolve_list.length == 0) { // Simple Yes/No resolution
            var picked = step.completed ? " checked" : "";
            td.innerHTML += "<label><input" + oc + dis + picked + " type='radio' name='step_resolution' value='YES'> Completed</label><br>";
        } else { // List of possible resolution values
            for (var i = 0; i < step.resolve_list.length; i++) {
                var itm = step.resolve_list[i];
                var picked = step.result == itm.code ? " checked" : "";
                td.innerHTML += "<label><input" + oc + dis + picked + " type='radio' name='step_resolution' value='" + itm.code + "'> " + itm.desc + "</label><br>";
            }

        }
        page.wflow.highlightStep(step, true);
    }
function debug(txt, clr) {
    if (txt == undefined || txt == null) txt = "";
    var div = document.getElementById("locDebug");
    if (div != undefined) {
        div.innerHTML = "";
        if (clr == undefined) clr = "black";
        div.innerHTML = txt;
        div.style.color = clr;
    }
}
page.readFlowFromTextFile = function (file, justload) {
    var rawFile = new XMLHttpRequest();
    page.justload = justload;
    //rawFile.overrideMimeType("application/json");
    rawFile.overrideMimeType("text/plain");
    rawFile.open("GET", file, true);
    rawFile.onreadystatechange = function() {
        if (rawFile.readyState === 4 && rawFile.status == "200") {
            page.loadFlow(JSON.parse(rawFile.responseText), page.justload);
        }
    }
    rawFile.send(null);
}
page.copyToClipboard = function(txt) {
    if (txt == undefined) txt = JSON.stringify(page.wflow.flow);
    var tbox = document.createElement("input");
    //tbox.style.display = "none";
    document.body.appendChild(tbox);
    tbox.value = txt;
    tbox.focus();
    tbox.select();
    tbox.setSelectionRange(0,999999); // mobile needs this
    document.execCommand("copy");
    document.body.removeChild(tbox);
}
</script>
</head>
<body onload='page.init()'>
    <table>
        <tr>
            <td style='vertical-align: top; width:830px;'>
                <button onclick='page.getFlow()'>Load Flow</button>
                <button onclick='page.saveFlow()'>Save Flow to file</button>
                [<span class='anchor' style='font-size:.8em;' onclick='page.saveLocal()'>Save in browser data</span>]
                <span id='locToastMessage' style='color:brown; font-size:.8em;'></span>
                <div style='position:relative; width:820px; height: 450px; overflow:scroll; margin-bottom:.5em; margin-top:.5em;'>
                    <div id='locFlowDiagramCanvas'></div>
                </div>
                <div style='margin-top:.5em;' id='locDebug' style='color:brown'></div>
            
            </td>
            <td id='locForm' style='vertical-align: top; text-align: left; width:500px;'>
                <div style='padding-bottom:.5em; margin-bottom:.5em; border-bottom: 1px solid navy;' id='locProperties'></div>
                <form id='frmStep' style='display:none; width:100%'>
                    <button onclick='page.askToDeleteStep()'>Delete This Step</button>
                    <table class='form'>
                        <tr><th><span class='anchor' onclick='page.editName();'>Title</span>:</th><td id='step_title'></td></tr>
                        <tr><th><span class='anchor' onclick='page.editDescription();'>Description</span>:</th><td id='step_desc'></textarea></td></tr>
                        <tr><th><span class='anchor' onclick='page.editComment();'>Comment</span>:</th><td id='step_comment'></td></tr>
                        <tr><th>Step shape:</th><td>
                                <label><input type='radio' onchange='page.changeShape()' name='step_shape' value='step' checked> Step</label>&nbsp;&nbsp;
                                <label><input type='radio' onchange='page.changeShape()' name='step_shape' value='box'> Box</label>&nbsp;&nbsp;
                                <label><input type='radio' onchange='page.changeShape()' name='step_shape' value='diamond'> Diamond</label>&nbsp;&nbsp;
                                <label><input type='radio' onchange='page.changeShape()' name='step_shape' value='circle'> Circle</label>
                            </td></tr>
                        <tr><td colspan='2'><hr/></td></tr>
                        <tr><th><span class='anchor' onclick='page.editLinks();'>Links</span>:</th><td id='step_link_summary'></td></tr>
                        <tr><th><span class='anchor' onclick='page.editProperties();'>Properties</span>:</th><td id='step_properties'></td></tr>
                        <tr><th><span class='anchor' onclick='page.editResolutions();'>Resolution</span>:</th><td id='locResolveList'></td></tr>
                    </table>
                    </div>
                </form>
            
            </td>
        </tr>
    </table>
</body>
<form id='frmLinks' class='BDialog' style='height:400px; width:400px;' title='Step Links'>
    <table style='width:100%'>
        <tr>
            <td style='width:50%; vertical-align:top'>
                Blocked by: [<span class='anchor' onclick='popDialog();page.addBlockedByStep()'>Add</span>]<br>
                <span id='step_dependson'></span>
            </td>
            <td style='width:50%; vertical-align:top'>
                Blocks: [<span class='anchor' onclick='popDialog();page.addBlockStep()'>Add</span>]<br>
                <span id='step_dependedonby'></span>
            </td>
        </tr>
    </table>
    <button class="BDialogButton" onclick='popDialog()'>Close</button>
</form>
<form id='frmResolutions' class='BDialog' style='height:450px; width:500px;' title='Resolution Items'>
    <table class='form' style='width:99%'>
        <tr>
            <td style='font-weight:bold; text-align:center;'>Code</td>
            <td style='font-weight:bold; text-align:center;'>Description</td>
        </tr>
        <tr><td><input name='CODE_0' size='4'></td><td><input name='DESC_0' size='40'></td></tr>
        <tr><td><input name='CODE_1' size='4'></td><td><input name='DESC_1' size='40'></td></tr>
        <tr><td><input name='CODE_2' size='4'></td><td><input name='DESC_2' size='40'></td></tr>
        <tr><td><input name='CODE_3' size='4'></td><td><input name='DESC_3' size='40'></td></tr>
        <tr><td><input name='CODE_4' size='4'></td><td><input name='DESC_4' size='40'></td></tr>
        <tr><td><input name='CODE_5' size='4'></td><td><input name='DESC_5' size='40'></td></tr>
        <tr><td><input name='CODE_6' size='4'></td><td><input name='DESC_6' size='40'></td></tr>
        <tr><td><input name='CODE_7' size='4'></td><td><input name='DESC_7' size='40'></td></tr>
        <tr><td><input name='CODE_8' size='4'></td><td><input name='DESC_8' size='40'></td></tr>
        <tr><td><input name='CODE_9' size='4'></td><td><input name='DESC_9' size='40'></td></tr>
    </table>

    <button class="BDialogButton" onclick='page.saveResolutions(); popDialog();'>Save</button>
    <button class="BDialogButton" onclick='popDialog()'>Close</button>
</form>
<form id='frmProperties' class='BDialog' style='height:450px; width:500px;' title='Properties'>
    <table class='form' style='width:99%'>
        <tr>
            <td style='font-weight:bold; text-align:center;'>Key</td>
            <td style='font-weight:bold; text-align:center;'>Value</td>
        </tr>
        <tr><td><input name='KEY_0' size='10'></td><td><input name='VAL_0' size='30'></td></tr>
        <tr><td><input name='KEY_1' size='10'></td><td><input name='VAL_1' size='30'></td></tr>
        <tr><td><input name='KEY_2' size='10'></td><td><input name='VAL_2' size='30'></td></tr>
        <tr><td><input name='KEY_3' size='10'></td><td><input name='VAL_3' size='30'></td></tr>
        <tr><td><input name='KEY_4' size='10'></td><td><input name='VAL_4' size='30'></td></tr>
        <tr><td><input name='KEY_5' size='10'></td><td><input name='VAL_5' size='30'></td></tr>
        <tr><td><input name='KEY_6' size='10'></td><td><input name='VAL_6' size='30'></td></tr>
        <tr><td><input name='KEY_7' size='10'></td><td><input name='VAL_7' size='30'></td></tr>
        <tr><td><input name='KEY_8' size='10'></td><td><input name='VAL_8' size='30'></td></tr>
        <tr><td><input name='KEY_9' size='10'></td><td><input name='VAL_9' size='30'></td></tr>
    </table>

    <button class="BDialogButton" onclick='page.saveProperties(); popDialog();'>Save</button>
    <button class="BDialogButton" onclick='popDialog()'>Close</button>
</form>
</html>
